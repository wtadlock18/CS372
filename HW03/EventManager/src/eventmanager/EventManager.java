/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventmanager;

import java.io.*;
import javax.swing.MutableComboBoxModel;
import java.util.*;
import java.util.regex.*;

/**
 *
 * @author dub10_000
 */
public class EventManager extends javax.swing.JFrame {

    /**
     * Creates new form EventManager
     */
    private final int[] months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    ArrayList<Event> events = new ArrayList();
    String f = new String("events.txt");
    String sortType = "Date";

    public EventManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        name = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        yearfield = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        dateSorter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameSorter = new javax.swing.JButton();
        locationSorter = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        monthfield = new javax.swing.JComboBox();
        dayfield = new javax.swing.JComboBox();
        sortedby = new javax.swing.JLabel();
        info = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        location.setToolTipText("");

        yearfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearfieldFocusLost(evt);
            }
        });
        yearfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                yearfieldKeyReleased(evt);
            }
        });

        Submit.setText("Add Event");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        dateSorter.setText("Date");
        dateSorter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateSorterActionPerformed(evt);
            }
        });

        jLabel1.setText("Order by:");

        nameSorter.setText("Name");
        nameSorter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSorterActionPerformed(evt);
            }
        });

        locationSorter.setText("Location");
        locationSorter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationSorterActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Location");

        jLabel4.setText("Month");

        jLabel5.setText("Day");

        jLabel6.setText("Year");

        monthfield.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthfieldActionPerformed(evt);
            }
        });

        dayfield.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "  " }));

        sortedby.setText("Currently Ordered by: Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(Submit))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateSorter)
                        .addGap(18, 18, 18)
                        .addComponent(nameSorter)
                        .addGap(18, 18, 18)
                        .addComponent(locationSorter)
                        .addGap(40, 40, 40)
                        .addComponent(sortedby)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yearfield, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(monthfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayfield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Submit)
                .addGap(18, 18, 18)
                .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dateSorter)
                    .addComponent(nameSorter)
                    .addComponent(locationSorter)
                    .addComponent(sortedby))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void nameSorterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSorterActionPerformed
        // TODO add your handling code here:
        sortType="Name";
        sort();
                
    }//GEN-LAST:event_nameSorterActionPerformed

    private void locationSorterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationSorterActionPerformed
        // TODO add your handling code here:
        sortType="Location";
        sort();
    }//GEN-LAST:event_locationSorterActionPerformed
    
    private void dateUpdate() throws IllegalArgumentException {
        if (yearfield.getText().equals("")) {
            throw new IllegalArgumentException("Please enter something into the year field");
        }
        String s = (String) monthfield.getSelectedItem();
        int m = Integer.parseInt(s);
        MutableComboBoxModel model = (MutableComboBoxModel) dayfield.getModel();
        int days = months[m - 1];
        int y = Integer.parseInt(yearfield.getText());
        if (m == 2 && y % 4 == 0) {
            days++;
        }
        for (int i = model.getSize() - 1; i >= 0; i--) {
            model.removeElementAt(i);
        }
        for (int i = 1; i <= days; i++) {
            if (i < 10) {
                model.addElement("0" + i);
            } else {
                model.addElement(i);
            }
        }
        dayfield.setModel(model);
        
    }

    private void sort() {
        if (sortType.equals("Date")) {
            events.sort(Event.DateComparator);
        }
        if (sortType.equals("Location")) {
            events.sort(Event.LocationComparator);
        }
        if (sortType.equals("Name")) {
            events.sort(Event.NameComparator);
        }
        textArea.setText(null);
        for (int i = 0; i < events.size(); i++) {
            
            textArea.append(events.get(i).toString() + "\n");
        }
        sortedby.setText("Currently Ordered by: "+sortType);
    }
    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        String l=location.getText();
        String n=name.getText();
        String year = yearfield.getText();
        
        if(n.equals("")){
            info.setText("Please enter a name for the event");
            return;
        }
        if(l.equals("")){
            info.setText("Please enter a location for the event");
            return;
        }
        if(year.equals("")){
            info.setText("Please enter a year for the event");
            return;
        }
        int length = year.length();
        if (length < 4) {
            for (int i = 0; i < 4 - length; i++) {
                year = "0" + year;
            }
        }
        
        String date = year + monthfield.getSelectedItem() + dayfield.getSelectedItem();
        
        Event e = new Event(date, l, n);
        events.add(e);
        try {
            
            BufferedWriter wrtr = new BufferedWriter(new FileWriter(f, true));
            String line = e.toString();
            wrtr.write(line);
            wrtr.newLine();
            wrtr.close();
            textArea.append(line + "\n");
        } catch (Exception ex) {
            System.out.println("Something went wrong somewhere.");
        }

    }//GEN-LAST:event_SubmitActionPerformed

    private void monthfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthfieldActionPerformed
        // TODO add your handling code here:
        try {
            dateUpdate();
        } catch (Exception ex) {
            ;
        }

    }//GEN-LAST:event_monthfieldActionPerformed

    private void yearfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearfieldKeyReleased

    }//GEN-LAST:event_yearfieldKeyReleased

    private void yearfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearfieldFocusLost
        // TODO add your handling code here:

        try {
            dateUpdate();
        } catch (IllegalArgumentException ex) {
            info.setText(ex.getMessage());
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_yearfieldFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        try {
            BufferedReader rdr = new BufferedReader(new FileReader(f));
            String line;
            //ArrayList<Event> events = new ArrayList();
            String[] patterns = {"Name:(.*) Location:", "Location:(.*) Month:", "Month:(.*) Day:", "Day:(.*) Year:", "Year:(.*)"};
            String[] info = {"", "", "", "", ""};
            while ((line = rdr.readLine()) != null) {
                for (int i = 0; i < 5; i++) {
                    Pattern p = Pattern.compile(patterns[i]);
                    Matcher m = p.matcher(line);
                    while (m.find()) {
                        info[i] = m.group(1);
                    }
                }
                Event event = new Event(info[4] + info[2] + info[3], info[0], info[1]);
                events.add(event);
                textArea.append(event.toString() + "\n");
            }
            rdr.close();
            sort();
            
        } catch (Exception ex) {
            System.out.printf("You failed. %s", ex.getMessage());
            
        }

    }//GEN-LAST:event_formWindowOpened

    private void dateSorterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateSorterActionPerformed
        // TODO add your handling code here:
        sortType="Date";
        sort();
        
    }//GEN-LAST:event_dateSorterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JButton dateSorter;
    private javax.swing.JComboBox dayfield;
    private javax.swing.JLabel info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField location;
    private javax.swing.JButton locationSorter;
    private javax.swing.JComboBox monthfield;
    private javax.swing.JTextField name;
    private javax.swing.JButton nameSorter;
    private javax.swing.JLabel sortedby;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField yearfield;
    // End of variables declaration//GEN-END:variables
}
